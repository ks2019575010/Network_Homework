<h3>1.TCP (Transmission Control Protocol): 전송 제어 프로토콜</h3>

전송계층(Transport Layer,4계층)
TCP는 근거리 통신망이나 인트라넷, 인터넷에 연결된 컴퓨터에서 실행되는 프로그램 간에 일련의 옥텟(8비트)을 안정적으로, 순서대로, 에러없이 교환할 수 있게 한다.
통신하고자 하는 양쪽 단말이 통신할 준비가 되었는지, 데이터가 제대로 전송되었는지, 데이터가 가는도중 변질 되지 않았는지, 수신자가 얼마나 받았고 빠진 부분은 없는지
등을 점검한다.
TCP/IP로 묶여 사용된다.

2.IP (Internet Protocol): 

네트워크 계층(Network Layer,3계층)
송신 호스트와 수신 호스트가 패킷 교환 네트워크에서 정보를 주고받는 데 사용하며, OSI 네트워크 계층에서 호스트의 주소지정과 패킷 분할 및 조립 기능을 담당한다.
비신뢰성(unreliability)과 비연결성(connectionlessness)이 특징

비신뢰성 : 흐름에 관여하지 않기 때문에 보낸 정보가 제대로 갔는지 보장하지 않는다. 
          패킷 전송과 정확한 순서를 보장하려면 TCP(Transmission Control Protocol)와 같은 IP의 상위 프로토콜을 이용해야 한다.

비연결성 : 송신자와 수신자가 데이터 전송을 위해 서로 연결될 필요가 없다.
          송신자는 수신자의 기기가 꺼져 있던지 고장나서 사용이 불가능한 상태이던지 상관없이 데이터를 보낼 수 있다.(물론 이러한 경우에 수신자는 데이터를 받지 못한다.)

현재 개인이 사용하는 IP는 4번째 버전인 IPv4(32비트)를 사용하고 있으며 기업은 6번째 버전인 IPv6(128비트)를 사용하기도 한다.
IPv4가 빠르게 고갈되면 IPv6가 대중화가 될 가능성이 있다.

3.UDP (User Datagram Protocol): 사용자 데이터그램 프로토콜

전송계층(Transport Layer,4계층)
데이터를 데이터그램(독립적인 관계를 지니는 패킷) 단위로 처리하는 프로토콜
TCP와 달리 UDP는 비연결형 프로토콜이다. 즉, 연결을 위해 할당되는 논리적인 경로가 없다.
그렇기 때문에 각각의 패킷은 다른 경로로 전송되고, 각각의 패킷은 독립적인 관계를 지니게 되는데 이렇게 데이터를 서로 다른 경로로 독립적으로 처리하게 된다.
신뢰성은 낮지만 속도가 빠르기 때문에 실시간 스트리밍에 자주 사용된다.

4.HTTP (Hypertext Transfer Protocol):

목적: 웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜.
특징: 주로 웹 페이지의 전송에 사용되며, 보안 측면에서는 HTTPS로 확장될 수 있음.

5.HTTPS (Hypertext Transfer Protocol Secure):

목적: HTTP의 보안 버전으로, 데이터 암호화를 통해 안전한 통신 보장.
특징: TLS (Transport Layer Security) 프로토콜을 사용하여 데이터의 안전성을 유지.

6.DNS (Domain Name System):

목적: 도메인 이름을 IP 주소로 변환하여 네트워크에서 호스트를 식별.
특징: 계층적인 구조를 가지며, 호스트 이름을 IP 주소로 해석하여 네트워크에서 사용.

7.FTP (File Transfer Protocol):

목적: 파일 전송을 위한 프로토콜.
특징: 클라이언트와 서버 간에 파일을 전송하기 위한 명령과 규칙을 정의.

8.SMTP (Simple Mail Transfer Protocol):

목적: 이메일 전송을 위한 프로토콜.
특징: 전자 메일을 보내기 위해 사용되며, 메일 서버 간에 메시지를 전달하는 규약 정의.

9.SSH (Secure Shell):

목적: 원격 시스템에 안전하게 접속하기 위한 프로토콜.
특징: 암호화된 통신을 제공하여 보안 접속을 보장.

10.SNMP (Simple Network Management Protocol):

목적: 네트워크 장치 및 서버의 상태를 모니터링하고 관리하기 위한 프로토콜.
특징: 네트워크 장치 간 정보 교환을 위한 프로토콜로 주로 관리 및 감시에 사용.

